-> ler BOM do arquivo utf32 -- FEITO

-> ler conteudo do arquivo utf32 -- FEITO

-> ver quanto que o caracter ocupa e se necessario "comprimir" em menos bytes -- FEITO

-> precisa adicionar os bits de representação na frente??? -- PERGUNTA -> SIM

-> sempre gravar em little endian??? -- PERGUNTA -> indiferente, vai pegando os bytes e gravando

-> mover os testes de little endian/big endian pra fora do while e separar em funcoes a contage de bytes
   e a gravacao deles no arquivo de saida -- FEITO

-> ta com o mesmo erro de sempre ler o ultmo byte duas vezes, tem q mudar a condicao do while -- FEITO

-> na vdd so add uma flag pra quando for little endian ou big endian, precisa fazer mais funcao n se pa -- FEITO

-> ta lendo errado? lendo um arquivo com 00 1f 24 14 n ta lendo esse 1f??? -- FEITO


-> novos problemas :)
   - problemas para conversão de caracteres de 4 bytes:
      -- como todos eles, desde o menor até o maior, possuem f0, pelo fato de ter esse 0, ta tendo problema na conversao
      -- fazer if para tratar esses casos com 0? espero q n seja isso

   - problemas para conversão de caracteres de 3 bytes:
      -- todos aqueles que apresentam 0 em sua representação hexadecimal estão dando problema
   
   - edge cases


-> mudanças a serem feitas:
   - eu to contando a quantidade de bytes que cada carater usa????????? utf32 sempre usa 4 bytes não é???? o erro ta aqui
      -- imagino que eu deva alterar isso pra sempre considerar 4 bytes e então não vai ter erro de quando tiver 00 no hexadecimal
      -- usar um for pra ciclar pelos bytes sempre considerando o limite do iterador como 4
